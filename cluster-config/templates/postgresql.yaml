{{- $count := .Values.users | add1 }}
{{- range $user := untilStep 1 (int $count) 1 }}
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/description: "This project contains a PostgreSQL database for user{{ $user }}"
    openshift.io/display-name: "user{{ $user }} - PostgreSQL DB"
  labels:
    argocd.argoproj.io/managed-by: gitops
  name: user{{ $user }}-db
---
#Add user to namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: user{{ $user }}-admin
  namespace: user{{ $user }}-db
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
  - kind: Group
    name: user{{ $user }}
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: postgresql
  name: postgresql-credentials
  namespace: user{{ $user }}-db
stringData:
  database-name: datagrid
  database-password: password
  database-user: rhdguser
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: user{{ $user }}-db
spec:
  ports:
  - name: postgresql
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgresql
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: user{{ $user }}-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: postgresql-credentials
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: postgresql-credentials
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: postgresql-credentials
        image: "registry.redhat.io/rhel9/postgresql-15"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          initialDelaySeconds: 120
          timeoutSeconds: 10
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: 2Gi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: postgresql-data
        emptyDir:
          medium: ""
{{- end }}
